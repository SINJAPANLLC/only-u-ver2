# Replit Object Storageのインポートを検索
grep -n "@replit/object-storage" server/*.ts

# 見つかった場合は、そのファイルを確認
cat server/index.ts | head -n 50
server/storage-adapter.ts:6:import { Client as ReplitClient } from '@replit/object-storage';
import express, { type Request, Response, NextFunction } from "express";
import helmet from "helmet";
import rateLimit from "express-rate-limit";
import cookieParser from "cookie-parser";
import { registerRoutes } from "./routes";
import { setupVite, serveStatic, log } from "./vite";

const app = express();

// Trust proxy for rate limiting (Replit uses reverse proxy)
app.set('trust proxy', 1);

// Cookie parser middleware
app.use(cookieParser());

// Security headers with environment-aware CSP
const isDevelopment = app.get("env") === "development";

// In development, disable CSP to allow Firebase and other services to work without restrictions
// In production, enable strict CSP for security
app.use(helmet({
  contentSecurityPolicy: isDevelopment ? false : {
    directives: {
      defaultSrc: ["'self'"],
      scriptSrc: ["'self'", "https://js.stripe.com", "https://apis.google.com"],
      styleSrc: ["'self'", "'unsafe-inline'", "https://fonts.googleapis.com"],
      fontSrc: ["'self'", "https://fonts.gstatic.com"],
      imgSrc: ["'self'", "data:", "https:", "blob:"],
      connectSrc: [
        "'self'", 
        "https://api.stripe.com", 
        "https://firestore.googleapis.com",
        "https://identitytoolkit.googleapis.com",
        "https://securetoken.googleapis.com",
        "https://*.firebaseio.com",
        "wss://*.firebaseio.com",
        "wss:"
      ],
      frameSrc: ["'self'", "https://js.stripe.com"],
    },
  },
  crossOriginEmbedderPolicy: false,
}));

// Rate limiting for API endpoints
const apiLimiter = rateLimit({
  windowMs: 15 * 60 * 1000, // 15 minutes
  max: 100, // Limit each IP to 100 requests per windowMs
  message: "Too many requests from this IP, please try again later.",
  standardHeaders: true,
root@srv1087935:/var/www/only-u# cd /var/www/only-u

grep -n "@replit/object-storage" server/index.ts
root@srv1087935:/var/www/only-u# ^C
root@srv1087935:/var/www/only-u# cd /var/www/only-u

grep -n "@replit/object-storage" server/index.ts
root@srv1087935:/var/www/only-u# ^C
root@srv1087935:/var/www/only-u# cd /var/www/only-u
root@srv1087935:/var/www/only-u# grep -n "@replit/object-storage" server/index.ts
root@srv1087935:/var/www/only-u# ^C
root@srv1087935:/var/www/only-u# cd /var/www/only-u

# server/routes.tsでReplit Object Storageが使われているか確認
grep -n "replitClient\|objectStorageClient\|@replit" server/routes.ts | head -n 20
1088:        const { ObjectStorageService, objectStorageClient } = await import('./objectStorage');
1111:        const bucket = objectStorageClient.bucket(bucketName);
1318:      const { ObjectStorageService, replitClient } = await import("./objectStorage");
1330:      const result = await replitClient.downloadAsBytes(filePath);
root@srv1087935:/var/www/only-u# 
